html, body, ul, li, a {
    text-decoration: none;
    color: currentColor;
    margin: 0;
    padding: 0;
    list-style: none;
}

body{
    display: flex;
	margin: 0;
    background-color: #D9D2CC;

    --aside: 300px;
    --margin: 10px;
    --popDuration: .5s;
}

main{
    position: relative;
    flex: 1;
    margin-left: calc(var(--aside) + var(--margin));
    // width: calc(100vw - calc(var(--aside) + var(--margin)))
}

#overlay{
    position: fixed;
    height: 100vh;
    left: calc(var(--aside) + calc(var(--margin) * 1.5));
    right: 0;
    opacity: 0;
    will-change: opacity;
    transition: opacity .2s ease;
    z-index: 999;
    pointer-events: none;
    &.front{
        opacity: 1;
    }
    & > *{
        position: absolute;
        right: var(--margin);
        pointer-events: initial;
        
        &:first-child{
            top: var(--margin);
        }
        &:last-child{
            bottom: var(--margin);
        }

        &, a{
            color: gray;
        }
    }
}

#graphs{
    margin: var(--margin);

    display: grid;
    grid-gap: var(--margin);
    justify-content: space-around;

    // cells of equal width
    --count: 9;
    grid-template-columns: repeat(auto-fill, minmax(auto, calc(calc(100% - calc(var(--margin) * calc(var(--count) - 1))) / var(--count))));
    grid-auto-rows: 1fr;

    // auto-layout around cells bigger than 1x1
    grid-auto-flow: dense;
    
    // hack for square cells
    &::before{
        content: '';
        width: 0;
        padding-bottom: 100%;
        grid-row: 1 / 1;
        grid-column: 1 / 1;
    }
    // override hack so that 1st cell isn't blank
    svg-card:first-child{
        grid-column: 1 / 1 / span 3;
        grid-row: 1 / 1 / span 3;
    }
    svg-card.featured{
        grid-column-end: span 2;
        grid-row-end: span 2;
    }
}
@media screen and (max-width: 2000px) { #graphs{--count: 8;} }
@media screen and (max-width: 1800px) { #graphs{--count: 7;} }
@media screen and (max-width: 1600px) { #graphs{--count: 6;} }
@media screen and (max-width: 1400px) { #graphs{--count: 5;} }
@media screen and (max-width: 1200px) { #graphs{--count: 4;} }
@media screen and (max-width: 1000px) { #graphs{--count: 3;} }
@media screen and (max-width: 800px)  { #graphs{--count: 2;} } 
@media screen and (max-width: 600px)  { #graphs{--count: 1;} }

@media screen and (max-width: 1200px){ 
    svg-card:first-child{
        grid-column: 1 / 1 / span 2;
        grid-row: 1 / 1 / span 2;
    }
    svg-card.featured{
        grid-column-end: span 1;
        grid-row-end: span 1;
    }
}


#meta{
    position: fixed;
    order: -1;
    width: var(--aside);
    height: 100vh;
    display: flex;
    flex-direction: column;
    padding: 0 var(--margin);
    justify-content: space-between;
    text-align: center;

    --unit: 75px;

    h1{
        height: var(--unit);
        svg{
            overflow: visible;
        }
    }
    h2 {
        height: var(--unit);
    }
    & > *:not(header) {
        text-transform: lowercase;
    }
    #navigation, #menu {
        height: var(--unit);
        ul {
            display: flex;
            li {
                flex: 1;
            }
        }
    }
    footer {
        li {
            height: var(--unit);
        }
    }
}


svg-card{
    position: relative;
    overflow: hidden;
    transform-origin: 0 0;
    transition: transform var(--popDuration) linear, opacity var(--popDuration) ease, box-shadow .2s ease;
    will-change: transform, opacity, box-shadow;
    background-color: white;
    padding: calc(.25 * var(--margin));
    cursor: pointer;

    &.front{
        position: fixed;
        top: 0;
        right: 0;
        width: calc(100vw - calc(var(--aside) + 2 * var(--margin)));
        height: 100vh;
        z-index: 1;
    }

    // loading classes
    box-shadow: 0 0 .5px black;
    & > svg{
        opacity: 0;
        transition: opacity .2s ease;
        will-change: opacity;
    }
    &.processed{
        box-shadow: 0 0 2.5px black;
        & > svg{
            opacity: 1;
        }
    }
    &.texted{
        & > svg{
            tspan, text{ opacity: 0; }
            [data-type="writing"]{ opacity: 1; }
        }
    }
    &.active{
        z-index: 1;
    }
    &:hover{
        box-shadow: .5px .5px 4px black;
    }
}