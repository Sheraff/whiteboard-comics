html, body, ul, li, a {
	text-decoration: none;
	color: currentColor;
	margin: 0;
	padding: 0;
	list-style: none;
	font-family: 'Permanent Marker', 'Chalkboard', 'Comic Sans MS', arial;
}

body{
	display: flex;
	margin: 0;
	background-color: #D9D2CC;

	--aside: 300px;
	--margin: 10px;
	--popDuration: .5s;
}

main{
	position: relative;
	flex: 1;
	margin-left: calc(var(--aside) + var(--margin));
}

#overlay{
	position: fixed;
	height: 100vh;
	left: calc(var(--aside) + calc(var(--margin) * 1.5));
	right: 0;
	opacity: 0;
	will-change: opacity;
	transition: opacity .2s ease;
	z-index: 999;
	pointer-events: none;
	&.front{
		opacity: 1;
	}
	& > *{
		position: absolute;
		right: var(--margin);
		pointer-events: initial;
		
		&:first-child{
			top: var(--margin);
		}
		&:last-child{
			bottom: var(--margin);
		}

		&, a{
			color: gray;
		}
	}
}

#graphs{
	margin: var(--margin);

	display: grid;
	grid-gap: var(--margin);
	justify-content: space-around;

	// cells of equal width
	--count: 9;
	grid-template-columns: repeat(auto-fill, minmax(auto, calc(calc(100% - calc(var(--margin) * calc(var(--count) - 1))) / var(--count))));
	grid-auto-rows: 1fr;

	// auto-layout around cells bigger than 1x1
	grid-auto-flow: dense;
	
	// hack for square cells
	&::before{
		content: '';
		width: 0;
		padding-bottom: 100%;
		grid-row: 1 / 1;
		grid-column: 1 / 1;
	}
	// override hack so that 1st cell isn't blank
	svg-card:first-child{
		grid-column: 1 / 1 / span 3;
		grid-row: 1 / 1 / span 3;
	}
	svg-card.featured{
		grid-column-end: span 2;
		grid-row-end: span 2;
	}
}
@media screen and (max-width: 2000px) { #graphs{--count: 8;} }
@media screen and (max-width: 1800px) { #graphs{--count: 7;} }
@media screen and (max-width: 1600px) { #graphs{--count: 6;} }
@media screen and (max-width: 1400px) { #graphs{--count: 5;} }
@media screen and (max-width: 1200px) { #graphs{--count: 4;} }
@media screen and (max-width: 1000px) { #graphs{--count: 3;} }
@media screen and (max-width: 800px)  { #graphs{--count: 2;} } 
@media screen and (max-width: 600px)  { #graphs{--count: 1;} }

@media screen and (max-width: 1200px){ 
	svg-card:first-child{
		grid-column: 1 / 1 / span 2;
		grid-row: 1 / 1 / span 2;
	}
	svg-card.featured{
		grid-column-end: span 1;
		grid-row-end: span 1;
	}
}


#meta{
	position: fixed;
	order: -1;
	width: var(--aside);
	height: 100vh;
	display: flex;
	flex-direction: column;
	padding: 0 var(--margin);
	justify-content: space-between;
	text-align: center;
	text-transform: lowercase;

	--unit: 75px;

	h1{
		height: var(--unit);
	}
	h2 {
		height: var(--unit);
		font-weight: 400;
	}
	& > *:not(header) {
		text-transform: lowercase;
	}
	#navigation, #menu {
		font-size: 1.3rem;
		height: var(--unit);
		ul {
			display: flex;
			height: 100%;
			li {
				flex: 1;
			}
		}
		a {
			display: block;
			height: 100%;
			position: relative;
			svg {
				max-width: 1.6rem;
				position: absolute;
				top: 50%;
				left: 50%;
				transform: translate3d(-50%, -50%, 0);
				transition: transform .2s;
				path{
					stroke-width: .35em;
				}
			}
			span {
				min-width: 100%;
				position: absolute;
				bottom: 0;
				left: 50%;
				opacity: 0;
				transform: translate3d(-50%, 50%, 0);
				transition: transform .2s, opacity .2s;
				pointer-events: none;
			}
			&:hover {
				svg {
					transform: translate3d(-50%, calc(-50% - .25em), 0);
				}
				span {
					opacity: 1;
					transform: translate3d(-50%, 0, 0);
				}
			}
			&[href=""], &:not([href]){
				opacity: .3;
				pointer-events: none;
			}
		}
	}
	#footer {
		font-size: 1rem;
		li {
			height: var(--unit);
			display: flex;
			justify-content: center;
			align-items: center;
			a {
				display: block;
			}
		}
		svg {
			display: inline;
			width: 1em;
			height: 1em;
			vertical-align: middle;
			padding-right: 0.5em;
			path{
				stroke-width: .4em;
			}
		}
	}
	svg{
		overflow: visible;
	}
}


svg-card{
	position: relative;
	overflow: hidden;
	transform-origin: 0 0;
	transition: transform var(--popDuration) linear, opacity var(--popDuration) ease, box-shadow .2s ease;
	will-change: transform, opacity, box-shadow;
	background-color: white;
	padding: calc(.25 * var(--margin));

	&:not(.open) > a {
		position: absolute;
		top: 0;
		right: 0;
		bottom: 0;
		left: 0;
		z-index: 1;
		cursor: pointer;
	}

	&.start-active {
		&, &.processed {
			& > svg {
				opacity: 0;
			}
		}
	}

	&.front{
		position: fixed;
		top: 0;
		right: 0;
		width: calc(100vw - calc(var(--aside) + 2 * var(--margin)));
		height: 100vh;
		z-index: 1;
	}

	// loading classes
	box-shadow: 0 0 .5px black;
	& > svg{
		opacity: 0;
		transition: opacity .2s ease;
		will-change: opacity;
	}
	&.processed{
		box-shadow: 0 0 2.5px black;
		& > svg{
			opacity: 1;
		}
	}
	&.texted{
		& > svg{
			tspan, text{ 
				fill-opacity: 0; 
			}
			[data-type="writing"]{ 
				stroke-opacity: 1; 
				animation: .2s ease-out fadein;
			}
		}
	}
	&.active{
		z-index: 1;
	}
	&:hover{
		box-shadow: .5px .5px 4px black;
	}

	
	// svg styling
	& > svg{
		max-height: 100%;
		max-width: 100%;
		position: relative;
		top: 50%;
		left: 50%;
		transform: translate(-50%, -50%);

		white-space: pre;
		overflow: visible;
		
		transform-origin: center center;
		transition: transform var(--popDuration) linear, opacity var(--popDuration) ease;
		will-change: transform, opacity;
		path, line, polyline{
			stroke-linecap: round;
			stroke-linejoin: round;
			stroke-miterlimit: 10;
			fill: none;
			&:not([stroke]){
				stroke: black;
			}
			&:not([stroke-width]){
				stroke-width: 4;
			}
		}
		tspan, text{
			font-display: block;
			font-family: 'Permanent Marker', 'Chalkboard', 'Comic Sans MS', arial;
			transition: fill-opacity .2s ease-in;
			will-change: fill-opacity;
		}
		[data-type="writing"]{
			stroke-opacity: 0;
			transition: stroke-opacity .2s ease-out;
			will-change: stroke-opacity;
		}
		[data-type="erase"]{
			stroke-linejoin: bevel;
			stroke-linecap: butt;
		}
	}
}

@keyframes fadein { from { stroke-opacity: 0; } to { stroke-opacity: 1; }  }